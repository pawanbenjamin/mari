---
// Import any actions and qualifiers required for transformations.
import { thumbnail } from "@cloudinary/url-gen/actions/resize";
import { byRadius } from "@cloudinary/url-gen/actions/roundCorners";
import { focusOn } from "@cloudinary/url-gen/qualifiers/gravity";
import { FocusOn } from "@cloudinary/url-gen/qualifiers/focusOn";

import { Cloudinary } from "@cloudinary/url-gen";
const cld = new Cloudinary({
  cloud: {
    cloudName: import.meta.env.CLOUDINARY_CLOUD_NAME
  }
});

const { src, ...props } = Astro.props;
let cldSrc = cld.image(src);

cldSrc;
// .resize(
//   thumbnail()
//     .width(props.width)
//     .height(props.height)
//     .gravity(focusOn(FocusOn.face()))
// ) // Crop the image, focusing on the face.
// .roundCorners(byRadius(20));
// cldSrc
//   .delivery("q_auto")
//   .resize(`c_crop,w_${props.width},h_${props.height},g_face`);
if (src.startsWith("https://")) {
  cldSrc.setDeliveryType("fetch");
}
interface Props {
  src: string;
  width: string;
  height: string;
  alt: string;
}
---

<img src={cldSrc.toURL()} loading="lazy" {...props} />
