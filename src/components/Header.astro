---
let visible = false
---

<header>
  <div id="burger-box">
    <label class="hamburger-menu">
      <input type="checkbox" />
    </label>
  </div>

  <span>contact</span>
</header>
<div id="name">
  <h1>mariposa</h1>
  <h1>wellness</h1>
</div>
<style>
  #name {
    text-align: center;
    font-family: "Manrope", sans-serif;
    margin-top: -1.8rem;
  }

  #burger-box,
  span {
    width: 25%;
  }

  h1 {
    line-height: 1.3rem;
    font-size: 1.3rem;
    font-weight: 200;
  }

  header span {
    font-weight: 800;
    font-size: smaller;
    text-align: right;
  }
  header span:hover {
    opacity: 0.6;
  }
  header {
    margin-top: 1rem;
    font-family: "Manrope", sans-serif;
    --bar-width: 20px;
    --bar-height: 2px;
    --hamburger-gap: 4px;
    --foreground: #333;
    --background: white;
    --hamburger-margin: 2rem;
    --animation-timing: 200ms ease-in-out;
    --hamburger-height: calc(var(--bar-height) * 3 + var(--hamburger-gap) * 2);

    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 1rem 0;
    position: sticky;
    top: 0;
  }
  .hamburger-menu {
    --x-width: calc(var(--hamburger-height) * 1.41421356237);

    display: flex;
    flex-direction: column;

    gap: var(--hamburger-gap);
    width: max-content;
    /* position: absolute; */
    /* top: var(--hamburger-margin);
    left: var(--hamburger-margin); */
    z-index: 2;
    cursor: pointer;
  }

  .hamburger-menu:has(input:focus-visible)::before,
  .hamburger-menu:has(input:focus-visible)::after,
  .hamburger-menu input:focus-visible {
    border: 1px solid var(--background);
    box-shadow: 0 0 0 1px var(--foreground);
  }

  .hamburger-menu::before,
  .hamburger-menu::after,
  .hamburger-menu input {
    content: "";
    width: var(--bar-width);
    height: var(--bar-height);
    background-color: var(--foreground);
    border-radius: 9999px;
    transform-origin: left center;
    transition: opacity var(--animation-timing), width var(--animation-timing),
      rotate var(--animation-timing), translate var(--animation-timing),
      background-color var(--animation-timing);
  }

  .hamburger-menu input {
    appearance: none;
    padding: 0;
    margin: 0;
    outline: none;
    pointer-events: none;
  }

  .hamburger-menu:has(input:checked)::before {
    rotate: 45deg;
    width: var(--x-width);
    translate: 0 calc(var(--bar-height) / -2);
  }

  .hamburger-menu:has(input:checked)::after {
    rotate: -45deg;
    width: var(--x-width);
    translate: 0 calc(var(--bar-height) / 2);
  }

  .hamburger-menu input:checked {
    opacity: 0;
    width: 0;
  }

  .sidebar {
    transition: translate var(--animation-timing);
    translate: -100%;
    padding: 0.5rem 1rem;
    padding-top: calc(var(--hamburger-height) + var(--hamburger-margin) + 1rem);
    background-color: var(--foreground);
    color: var(--background);
    max-width: 10rem;
    min-height: 100vh;
  }
</style>
<script defer>
  const name = document.querySelector("#name")
  function fadeOutOnScroll(element) {
    if (!element) {
      return
    }

    let distanceToTop = window.pageYOffset + element.getBoundingClientRect().top

    let elementHeight = element.offsetHeight
    let scrollTop = document.documentElement.scrollTop

    console.log({ distanceToTop, elementHeight, scrollTop })

    let opacity = 1

    if (scrollTop > distanceToTop) {
      opacity = 1 - (scrollTop - distanceToTop) / elementHeight
    }

    if (opacity >= 0) {
      element.style.opacity = opacity
    }
  }
  function scrollHandler() {
    fadeOutOnScroll(name)
  }

  window.addEventListener("scroll", scrollHandler)
</script>
